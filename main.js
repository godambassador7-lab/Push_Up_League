const STORAGE='pul_pwa_profiles'; const ACTIVE='pul_pwa_active';
function loadAll(){try{return JSON.parse(localStorage.getItem(STORAGE))||{};}catch(e){return {};}} 
function saveAll(o){localStorage.setItem(STORAGE, JSON.stringify(o));}
function setActive(u){localStorage.setItem(ACTIVE,u);} function getActive(){return localStorage.getItem(ACTIVE)||'';}
function def(){return {entries:{}, lifetimeXP:0, spendableXP:0, trust:75, displayName:'', typeXP:{}, ownedTitles:{}, equippedTitle:null, weekTarget:700, dailyGoalXP:500};}
let state=null;
function ensure(){const u=getActive(); const all=loadAll(); if(!all[u]) return null; state=Object.assign(def(), all[u].data||{}); return state;}
function persist(){const u=getActive(); const all=loadAll(); if(!all[u]) return; all[u].data=state; saveAll(all);}
function lvlFromXP(x){for(let i=1;i<=100;i++){if(x<500*i) return Math.max(1,i-1);} return 100;}
const TYPES={"BEGINNER":[["Standard",1.0],["Knee",0.8],["Incline",0.9],["Wide-Grip",1.1],["Narrow-Grip",1.2],["Tempo",1.1]],"INTERMEDIATE":[["Diamond",1.5],["Decline",1.4],["Knuckle",1.6],["Pike",1.4],["Shoulder-Tap",1.4],["Spiderman",1.5]],"ADVANCED":[["Archer",2.0],["Clap / Plyometric",2.2],["Ring Push-Up",2.4],["Weighted",2.5],["One-Leg",1.9]],"ELITE":[["One-Arm",2.8],["Handstand",3.5],["Planche",3.5],["Tiger Bend",3.3]]};
function multOf(name){for(const k in TYPES){for(const [t,m] of TYPES[k]) if(t===name) return m;} return 1.0;}
let anchor=new Date(), selected=null;
function toISO(d){const off=d.getTimezoneOffset();const local=new Date(d.getTime()-off*60000);return local.toISOString().slice(0,10);}
function weekStart(d){const t=new Date(d); const day=(t.getDay()||7)-1; t.setDate(t.getDate()-day); t.setHours(0,0,0,0); return t;}
function monthCells(dt){const f=new Date(dt.getFullYear(),dt.getMonth(),1);const start=new Date(f);const dow=(f.getDay()||7)-1;start.setDate(f.getDate()-dow);const cells=[];for(let i=0;i<42;i++){const d=new Date(start);d.setDate(start.getDate()+i);cells.push(d);}return cells;}
function renderCal(){if(!state) return; const cal=document.getElementById('calendar'); cal.innerHTML=''; document.getElementById('calTitle').textContent=anchor.toLocaleString(undefined,{month:'long',year:'numeric'}); const head=document.createElement('div'); head.style.display='grid'; head.style.gridTemplateColumns='repeat(7,1fr)'; ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'].forEach(d=>{const el=document.createElement('div'); el.className='dow'; el.textContent=d; head.appendChild(el);}); cal.appendChild(head); const grid=document.createElement('div'); grid.style.display='grid'; grid.style.gridTemplateColumns='repeat(7,1fr)'; grid.style.gap='6px'; monthCells(anchor).forEach(d=>{const iso=toISO(d); const e=state.entries[iso]; const cell=document.createElement('div'); cell.className='day'; if(iso===toISO(new Date())) cell.classList.add('today'); cell.onclick=()=>{selected=iso; renderDay();}; cell.innerHTML='<div class=\"date\">'+d.getDate()+'</div>'; const tag=document.createElement('div'); tag.className='sum'; tag.textContent=(e&&e.total?e.total:0)+' reps'; cell.appendChild(tag); grid.appendChild(cell);}); cal.appendChild(grid);}
function renderDay(){const e=state.entries[selected]||{perHour:{},total:0,locked:false}; const hs=document.getElementById('hour'); hs.innerHTML=''; for(let h=0;h<24;h++){const h12=((h+11)%12+1), ap=h>=12?'pm':'am'; const lab=h12+ap; const op=document.createElement('option'); op.value=lab; op.textContent=lab; hs.appendChild(op);} const tp=document.getElementById('type'); tp.innerHTML=''; if(document.getElementById('modeSel').value==='enthusiast'){ for(const k in TYPES){const og=document.createElement('optgroup'); og.label=k; TYPES[k].forEach(([n,m])=>{const op=document.createElement('option'); op.value=n; op.textContent=n+' (×'+m+')'; og.appendChild(op);}); tp.appendChild(og);} } else {const op=document.createElement('option'); op.value='Standard'; op.textContent='Standard (×1.0)'; tp.appendChild(op);} const grid=document.getElementById('hrs'); grid.innerHTML=''; Object.keys(e.perHour).sort().forEach(h=>{const it=e.perHour[h]; const d=document.createElement('div'); d.className='pill'; d.textContent=h+' • '+it.count+' • '+(it.type||'Standard'); grid.appendChild(d);}); document.getElementById('xp').textContent = state.lifetimeXP; document.getElementById('sp').textContent = state.spendableXP; document.getElementById('sp2').textContent = state.spendableXP; document.getElementById('trust').textContent = Math.round(state.trust); document.getElementById('lvl').textContent = lvlFromXP(state.lifetimeXP); document.getElementById('weekTarget').textContent = state.weekTarget; document.getElementById('equippedTitle').textContent = state.equippedTitle? state.equippedTitle : \"No Title\"; const ws=weekStart(new Date(selected||toISO(new Date()))); let sum=0; for(let i=0;i<7;i++){const d=new Date(ws); d.setDate(ws.getDate()+i); const e2=state.entries[toISO(d)]; if(e2) sum+=e2.total||0;} document.getElementById('week').textContent = sum; document.getElementById('lock').disabled = e.locked || e.total===0;}
document.addEventListener('DOMContentLoaded', ()=>{
  setTimeout(()=>{const s=document.getElementById('splash'); if(s) s.style.display='none';}, 2000);
  document.getElementById('add').onclick=()=>{if(!state) return alert('Sign in first'); if(!selected){selected=toISO(new Date());} const hour=document.getElementById('hour').value; const val=parseInt(document.getElementById('cnt').value||'0',10); if(val<=0) return; const type=document.getElementById('type').value || 'Standard'; if(!state.entries[selected]) state.entries[selected]={perHour:{},total:0,locked:false}; const e=state.entries[selected]; if(e.locked) return alert('Day locked'); if(!e.perHour[hour]) e.perHour[hour]={count:0,type:type}; e.perHour[hour].count += val; e.perHour[hour].type = type; e.total = Object.values(e.perHour).reduce((a,b)=>a+b.count,0); persist(); renderDay(); renderCal();};
  document.getElementById('lock').onclick=()=>{const e=state.entries[selected]; if(!e||e.total===0) return alert('Nothing to lock'); if(e.locked) return; e.locked=true; const earned=calcXP(e); state.lifetimeXP+=earned; state.spendableXP+=earned; persist(); renderDay(); renderCal(); jar(Math.min(100, Math.round(earned/ state.dailyGoalXP * 100)), earned);};
  document.getElementById('prev').onclick=()=>{anchor=new Date(anchor.getFullYear(),anchor.getMonth()-1,1); renderCal();};
  document.getElementById('next').onclick=()=>{anchor=new Date(anchor.getFullYear(),anchor.getMonth()+1,1); renderCal();};
  document.getElementById('modeSel').onchange=()=>renderDay();
  document.getElementById('equipNone').onclick=()=>{state.equippedTitle=null; persist(); renderDay();};
  const mask=document.getElementById('authMask'); document.getElementById('authBtn').onclick=()=>{mask.style.display='flex';}; document.getElementById('close').onclick=()=>{mask.style.display='none';};
  document.getElementById('create').onclick=async()=>{const u=document.getElementById('u').value.trim(), p=document.getElementById('p').value, dn=document.getElementById('d').value.trim(); if(!u||!p) return alert('Username & password required'); const all=loadAll(); if(all[u]) return alert('Username exists'); const h=await hash(p); all[u]={hash:h,data:def()}; all[u].data.displayName=dn||u; saveAll(all); setActive(u); ensure(); mask.style.display='none'; showOnboarding();};
  document.getElementById('signin').onclick=async()=>{const u=document.getElementById('u').value.trim(), p=document.getElementById('p').value; const all=loadAll(); if(!all[u]) return alert('No such user'); const h=await hash(p); if(h!==all[u].hash) return alert('Incorrect password'); setActive(u); ensure(); mask.style.display='none'; initUI();};
  const ob=document.getElementById('onboard'); const btnFinish=document.getElementById('obFinish'); ob.addEventListener('click',(e)=>{if(e.target.classList.contains('chip')){const par=e.target.closest('.choices'); par.querySelectorAll('.chip').forEach(x=>x.classList.remove('active')); e.target.classList.add('active'); const answered = Array.from(document.querySelectorAll('.choices')).every(x=>x.querySelector('.chip.active')); btnFinish.disabled = !answered;}}); btnFinish.onclick=()=>{const ans={}; document.querySelectorAll('.choices').forEach(c=>{const k=c.dataset.key; const a=c.querySelector('.chip.active'); if(a) ans[k]=a.dataset.v;}); applyPlan(ans); ob.classList.add('hidden'); initUI();};
  if('serviceWorker' in navigator){ window.addEventListener('load', ()=>{ navigator.serviceWorker.register('service-worker.js').then(()=>{const s=document.getElementById('splash'); if(s) s.style.display='none';}).catch(()=>{const s=document.getElementById('splash'); if(s) s.style.display='none';}); }); }
});
function calcXP(e){const base=e.total; let type='Standard'; const hrs=Object.values(e.perHour); if(hrs.length) type=hrs[hrs.length-1].type||'Standard'; const mode=document.getElementById('modeSel').value; let mult=1.0; if(mode==='enthusiast') mult = multOf(type); const consistency = (Object.keys(e.perHour).length>=3)?1.10:1.0; const fatigue = Math.pow(0.98, Math.max(0, e.total-500)/50); const trustMult = (state.trust||75)/100; let earned = Math.round(base * mult * consistency * fatigue * trustMult); if(checkStreakBonus()) earned*=2; if(mode==='enthusiast'){ state.typeXP[type]=(state.typeXP[type]||0)+earned; } return earned;}
function checkStreakBonus(){let ok=true; for(let i=0;i<7;i++){const d=new Date(); d.setDate(d.getDate()-i); const iso=toISO(d); const e=state.entries[iso]; if(!e||!e.locked||(e.total||0)<100){ok=false;break;}} return ok;}
function jar(percent,xp){const mask=document.getElementById('jarMask'); const fill=document.getElementById('fill'); const txt=document.getElementById('xpEarn'); mask.style.display='flex'; fill.style.height='0%'; txt.textContent='+0 XP'; setTimeout(()=>{fill.style.height=Math.min(100,percent)+'%';},100); let cur=0, step=Math.max(1,Math.round(xp/40)); const iv=setInterval(()=>{cur+=step; if(cur>=xp){cur=xp; clearInterval(iv);} txt.textContent='+'+cur+' XP';},35); setTimeout(()=>{mask.style.display='none';}, 3000);}
const TITLES=(()=>{const arr=[]; const themes=['Prime','Elite','Apex','Nova','Vortex','Zenith','Ionic','Vector','Turbo','Quasar']; for(let i=1;i<=500;i++){const tier=Math.floor((i-1)/50); const cost=100+tier*250; arr.push({id:'t'+i,name:`${themes[i%themes.length]} League Title #${String(i).padStart(3,'0')}`,cost});} return arr;})();
function renderShop(){const S=document.getElementById('shop'); S.innerHTML=''; TITLES.slice(0,60).forEach(t=>{const owned=!!state.ownedTitles[t.id]; const row=document.createElement('div'); row.className='title-card'; row.innerHTML=`<div><b>${t.name}</b><div class=\"pill\" style=\"display:inline-block;margin-top:6px\">Cost: ${t.cost} XP</div></div><div>${owned?'<button class=\"btn\" data-eq=\"'+t.id+'\">Equip</button>':'<button data-id=\"'+t.id+'\" class=\"btn ok\">Buy</button>'}</div>`; S.appendChild(row);}); S.querySelectorAll('button[data-id]').forEach(btn=>btn.onclick=()=>{const id=btn.getAttribute('data-id'); const t=TITLES.find(x=>x.id===id); if(!t) return; if(state.spendableXP < t.cost) return alert('Not enough XP'); state.spendableXP -= t.cost; state.ownedTitles[id]=true; persist(); renderDay(); renderShop();}); S.querySelectorAll('button[data-eq]').forEach(btn=>btn.onclick=()=>{const id=btn.getAttribute('data-eq'); const t=TITLES.find(x=>x.id===id); state.equippedTitle=t?t.name:null; persist(); renderDay();});}
async function hash(t){const enc=new TextEncoder().encode(t); const buf=await crypto.subtle.digest('SHA-256', enc); return Array.from(new Uint8Array(buf)).map(b=>b.toString(16).padStart(2,'0')).join('');}
function showOnboarding(){document.getElementById('onboard').classList.remove('hidden');}
function applyPlan(ans){let daily=500, weekly=700, trust=75; switch(ans.setCapacity){case '0-10': daily=50; trust=60; break; case '11-25': daily=120; trust=68; break; case '26-50': daily=250; trust=75; break; case '51-100': daily=400; trust=82; break; case '100+': daily=700; trust=90; break;} switch(ans.daysPerWeek){case '0': weekly=daily*3; break; case '1-2': weekly=daily*4; break; case '3-4': weekly=daily*6; break; case '5-6': weekly=daily*6.5; break; case '7': weekly=daily*7; break;} if(ans.goal==='titles'){ trust+=3; } if(ans.goal==='record'){ daily=Math.round(daily*1.15); weekly=Math.round(weekly*1.15); } if(ans.goal==='consistency'){ daily=Math.round(daily*0.9); } state.dailyGoalXP = Math.max(100, Math.round(daily)); state.weekTarget  = Math.max(350, Math.round(weekly)); state.trust       = Math.min(95, Math.max(55, Math.round(trust))); persist();}
function initUI(){ if(!selected) selected=toISO(new Date()); renderCal(); renderDay(); renderShop(); }
(function(){ const u=getActive(); if(u) ensure(); initUI(); })();